vendor_name = ModelSim
source_file = 1, C:/Users/crobe/Desktop/School/ECE253/lab2/main.v
source_file = 1, C:/Users/crobe/Desktop/School/ECE253/lab2/mux.v
source_file = 1, C:/Users/crobe/Desktop/School/ECE253/u_of_t_scripts/compile_sim.tcl
source_file = 1, C:/Users/crobe/Desktop/School/ECE253/lab2/db/part_1.cbx.xml
design_name = main
instance = comp, \SW[1]~input , SW[1]~input, main, 1
instance = comp, \SW[9]~input , SW[9]~input, main, 1
instance = comp, \SW[0]~input , SW[0]~input, main, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, main, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, main, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, main, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, main, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, main, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, main, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, main, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, main, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, main, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, main, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, main, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, main, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, main, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, main, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, main, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, main, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, main, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, main, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, main, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, main, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, main, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, main, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, main, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, main, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, main, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, main, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, main, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, main, 1
instance = comp, \HEX4[0]~output , HEX4[0]~output, main, 1
instance = comp, \HEX4[1]~output , HEX4[1]~output, main, 1
instance = comp, \HEX4[2]~output , HEX4[2]~output, main, 1
instance = comp, \HEX4[3]~output , HEX4[3]~output, main, 1
instance = comp, \HEX4[4]~output , HEX4[4]~output, main, 1
instance = comp, \HEX4[5]~output , HEX4[5]~output, main, 1
instance = comp, \HEX4[6]~output , HEX4[6]~output, main, 1
instance = comp, \HEX5[0]~output , HEX5[0]~output, main, 1
instance = comp, \HEX5[1]~output , HEX5[1]~output, main, 1
instance = comp, \HEX5[2]~output , HEX5[2]~output, main, 1
instance = comp, \HEX5[3]~output , HEX5[3]~output, main, 1
instance = comp, \HEX5[4]~output , HEX5[4]~output, main, 1
instance = comp, \HEX5[5]~output , HEX5[5]~output, main, 1
instance = comp, \HEX5[6]~output , HEX5[6]~output, main, 1
instance = comp, \LEDR[0]~output , LEDR[0]~output, main, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, main, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, main, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, main, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, main, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, main, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, main, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, main, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, main, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, main, 1
instance = comp, \x[0]~output , x[0]~output, main, 1
instance = comp, \x[1]~output , x[1]~output, main, 1
instance = comp, \x[2]~output , x[2]~output, main, 1
instance = comp, \x[3]~output , x[3]~output, main, 1
instance = comp, \x[4]~output , x[4]~output, main, 1
instance = comp, \x[5]~output , x[5]~output, main, 1
instance = comp, \x[6]~output , x[6]~output, main, 1
instance = comp, \x[7]~output , x[7]~output, main, 1
instance = comp, \y[0]~output , y[0]~output, main, 1
instance = comp, \y[1]~output , y[1]~output, main, 1
instance = comp, \y[2]~output , y[2]~output, main, 1
instance = comp, \y[3]~output , y[3]~output, main, 1
instance = comp, \y[4]~output , y[4]~output, main, 1
instance = comp, \y[5]~output , y[5]~output, main, 1
instance = comp, \y[6]~output , y[6]~output, main, 1
instance = comp, \colour[0]~output , colour[0]~output, main, 1
instance = comp, \colour[1]~output , colour[1]~output, main, 1
instance = comp, \colour[2]~output , colour[2]~output, main, 1
instance = comp, \plot~output , plot~output, main, 1
instance = comp, \vga_resetn~output , vga_resetn~output, main, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, main, 1
instance = comp, \SW[2]~input , SW[2]~input, main, 1
instance = comp, \SW[3]~input , SW[3]~input, main, 1
instance = comp, \SW[4]~input , SW[4]~input, main, 1
instance = comp, \SW[5]~input , SW[5]~input, main, 1
instance = comp, \SW[6]~input , SW[6]~input, main, 1
instance = comp, \SW[7]~input , SW[7]~input, main, 1
instance = comp, \SW[8]~input , SW[8]~input, main, 1
instance = comp, \KEY[0]~input , KEY[0]~input, main, 1
instance = comp, \KEY[1]~input , KEY[1]~input, main, 1
instance = comp, \KEY[2]~input , KEY[2]~input, main, 1
instance = comp, \KEY[3]~input , KEY[3]~input, main, 1
design_name = mux_1
design_name = mux2to1
instance = comp, \m~0 , m~0, mux2to1, 1
